<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0718.1543                               -->
<workbook original-version='18.1' source-build='2019.2.2 (20192.19.0718.1543)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='DataNow' inline='true' name='federated.11glxe31aszf7o16nf5380ijvl0t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DataNow' name='textscan.0h922150hdcyv71fkrnge1htj70j'>
            <connection class='textscan' directory='D:/Projects/kpmg/finalData' filename='DataNow.csv' password='' port='0' server='' />
          </named-connection>
          <named-connection caption='DataNew' name='textscan.1qccak51u0l1xv10gqvzx0eumaag'>
            <connection class='textscan' directory='D:/Projects/kpmg/finalData' filename='DataNew.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[DataNow.csv].[ageGroup]' />
              <expression op='[DataNew.csv].[ageGroup]' />
            </expression>
          </clause>
          <relation connection='textscan.0h922150hdcyv71fkrnge1htj70j' name='DataNow.csv' table='[DataNow#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='ID' ordinal='0' />
              <column datatype='string' name='gender' ordinal='1' />
              <column datatype='string' name='pastPurchases' ordinal='2' />
              <column datatype='string' name='ageGroup' ordinal='3' />
              <column datatype='string' name='jobIndustry' ordinal='4' />
              <column datatype='string' name='wealthSegment' ordinal='5' />
              <column datatype='string' name='ownsCar' ordinal='6' />
              <column datatype='string' name='tenure' ordinal='7' />
              <column datatype='string' name='state' ordinal='8' />
              <column datatype='integer' name='propertyValuation' ordinal='9' />
              <column datatype='real' name='totalSpent' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.1qccak51u0l1xv10gqvzx0eumaag' name='DataNew.csv' table='[DataNew#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='fullName' ordinal='0' />
              <column datatype='string' name='gender' ordinal='1' />
              <column datatype='string' name='pastPurchases' ordinal='2' />
              <column datatype='string' name='ageGroup' ordinal='3' />
              <column datatype='string' name='jobIndustry' ordinal='4' />
              <column datatype='string' name='wealthSegment' ordinal='5' />
              <column datatype='string' name='ownsCar' ordinal='6' />
              <column datatype='string' name='tenure' ordinal='7' />
              <column datatype='string' name='state' ordinal='8' />
              <column datatype='integer' name='propertyValuation' ordinal='9' />
              <column datatype='integer' name='evaluation' ordinal='10' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ID]' value='[DataNow.csv].[ID]' />
          <map key='[ageGroup (DataNew.csv)]' value='[DataNew.csv].[ageGroup]' />
          <map key='[ageGroup]' value='[DataNow.csv].[ageGroup]' />
          <map key='[evaluation]' value='[DataNew.csv].[evaluation]' />
          <map key='[fullName]' value='[DataNew.csv].[fullName]' />
          <map key='[gender (DataNew.csv)]' value='[DataNew.csv].[gender]' />
          <map key='[gender]' value='[DataNow.csv].[gender]' />
          <map key='[jobIndustry (DataNew.csv)]' value='[DataNew.csv].[jobIndustry]' />
          <map key='[jobIndustry]' value='[DataNow.csv].[jobIndustry]' />
          <map key='[ownsCar (DataNew.csv)]' value='[DataNew.csv].[ownsCar]' />
          <map key='[ownsCar]' value='[DataNow.csv].[ownsCar]' />
          <map key='[pastPurchases (DataNew.csv)]' value='[DataNew.csv].[pastPurchases]' />
          <map key='[pastPurchases]' value='[DataNow.csv].[pastPurchases]' />
          <map key='[propertyValuation (DataNew.csv)]' value='[DataNew.csv].[propertyValuation]' />
          <map key='[propertyValuation]' value='[DataNow.csv].[propertyValuation]' />
          <map key='[state (DataNew.csv)]' value='[DataNew.csv].[state]' />
          <map key='[state]' value='[DataNow.csv].[state]' />
          <map key='[tenure (DataNew.csv)]' value='[DataNew.csv].[tenure]' />
          <map key='[tenure]' value='[DataNow.csv].[tenure]' />
          <map key='[totalSpent]' value='[DataNow.csv].[totalSpent]' />
          <map key='[wealthSegment (DataNew.csv)]' value='[DataNew.csv].[wealthSegment]' />
          <map key='[wealthSegment]' value='[DataNow.csv].[wealthSegment]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pastPurchases</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pastPurchases]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>pastPurchases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ageGroup</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ageGroup]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>ageGroup</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jobIndustry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[jobIndustry]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>jobIndustry</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wealthSegment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wealthSegment]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>wealthSegment</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ownsCar</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ownsCar]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>ownsCar</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tenure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tenure]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>tenure</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>propertyValuation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[propertyValuation]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>propertyValuation</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalSpent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totalSpent]</local-name>
            <parent-name>[DataNow.csv]</parent-name>
            <remote-alias>totalSpent</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fullName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fullName]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>fullName</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pastPurchases</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pastPurchases (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>pastPurchases</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ageGroup</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ageGroup (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>ageGroup</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jobIndustry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[jobIndustry (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>jobIndustry</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wealthSegment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wealthSegment (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>wealthSegment</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ownsCar</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ownsCar (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>ownsCar</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tenure</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tenure (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>tenure</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>propertyValuation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[propertyValuation (DataNew.csv)]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>propertyValuation</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>evaluation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[evaluation]</local-name>
            <parent-name>[DataNew.csv]</parent-name>
            <remote-alias>evaluation</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Job Industry (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[jobIndustry]' new-bin='true'>
          <bin default-name='true' value='&quot;Financial Services, Health, Manufacturing&quot;'>
            <value>&quot;Financial Services&quot;</value>
            <value>&quot;Health&quot;</value>
            <value>&quot;Manufacturing&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Evaluation' datatype='integer' name='[evaluation]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='Full Name' datatype='string' name='[fullName]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column datatype='string' name='[jobIndustry (DataNew.csv) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[jobIndustry (DataNew.csv)]' new-bin='true'>
          <bin default-name='true' value='&quot;Financial Services, Health, Manufacturing&quot;'>
            <value>&quot;Financial Services&quot;</value>
            <value>&quot;Health&quot;</value>
            <value>&quot;Manufacturing&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[jobIndustry (DataNew.csv)]' role='dimension' type='nominal' />
      <column caption='Job Industry' datatype='string' name='[jobIndustry]' role='dimension' type='nominal' />
      <column caption='Owns Car' datatype='string' name='[ownsCar]' role='dimension' type='nominal' />
      <column caption='Past Purchases' datatype='string' name='[pastPurchases]' role='dimension' type='nominal' />
      <column datatype='string' name='[propertyValuation (DataNew.csv) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[propertyValuation (DataNew.csv)]' new-bin='true'>
          <bin default-name='true' value='&quot;8, 9, 10 and 1 more&quot;'>
            <value>8</value>
            <value>9</value>
            <value>10</value>
            <value>11</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Sum' datatype='integer' name='[propertyValuation (DataNew.csv)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Property Valuation' datatype='integer' name='[propertyValuation]' role='dimension' type='ordinal' />
      <column datatype='string' name='[state (DataNew.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;QLD&quot;' value='&quot;Queensland&quot;' />
          <semantic-value key='&quot;VIC&quot;' value='&quot;Victoria&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;NSW&quot;' value='-31.2532' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;NSW&quot;' value='146.9211' />
        </semantic-values>
      </column>
      <column datatype='string' name='[tenure (DataNew.csv) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[tenure (DataNew.csv)]' new-bin='true'>
          <bin default-name='true' value='&quot;04-07, 08-11, 12-15 and 1 more&quot;'>
            <value>&quot;04-07&quot;</value>
            <value>&quot;08-11&quot;</value>
            <value>&quot;12-15&quot;</value>
            <value>&quot;16-19&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[tenure (DataNew.csv)]' role='dimension' type='nominal' />
      <column caption='Tenure' datatype='string' name='[tenure]' role='dimension' type='nominal' />
      <column caption='Total Spent' datatype='real' name='[totalSpent]' role='measure' type='quantitative' />
      <column caption='Wealth Segment' datatype='string' name='[wealthSegment]' role='dimension' type='nominal' />
      <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
      <column-instance column='[evaluation]' derivation='None' name='[none:evaluation:ok]' pivot='key' type='ordinal' />
      <column-instance column='[fullName]' derivation='None' name='[none:fullName:nk]' pivot='key' type='nominal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[state (DataNew.csv)]' derivation='None' name='[none:state (DataNew.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[wealthSegment]' derivation='None' name='[none:wealthSegment:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.675373' measure-ordering='alphabetic' measure-percentage='0.324627' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Job Industry (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Financial Services, Health, Manufacturing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state (DataNew.csv):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;NSW&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VIC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QLD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:gender:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#6fb899'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:fullName:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;Adriane Richardson&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Ailyn Howgate&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Alexa Dillet&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Almira Mangion&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Andrea Pendle&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Angie Tansley&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Antony Tuma&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Art Carolan&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Augusta Munns&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Barnebas Apfel&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Bertrando Carass&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Blinnie Roze&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Briant Ladley&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Brynna Tivers&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Calida Schaben&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Carolann Raatz&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Cecelia Cisar&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Charlena Berney&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Chryste Oddboy&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Claude Bowstead&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Cliff Philipsson&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Cord Dunsmore&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Cristen Maroney&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Dawn Pyffe&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Deirdre Sturgeon&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Denys Minshall&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Dominick Asher&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Dorian Stollen&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Dorolice Osmon&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Druci Brandli&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Eachelle Noirel&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Ellie Toope&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Emelia Ackwood&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Esdras Birchett&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Farlie Petford&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Ferdinand Romanetti&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Francklin Cross&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Frieda Tavinor&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Garreth Minett&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Gerianne Kaysor&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Giorgi O&apos;Shirine&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Glenn Casbourne&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Gretna Thredder&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Hallsy Voysey&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Harriet Brattan&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Heinrick Shilstone&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Ingmar Okenden&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Jackie Pays&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Jehu Prestedge&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Jeno Strafford&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Joane Caldes&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Judie Pirkis&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Kariotta Naper&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Kathe Oller&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Keenan Moriarty&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Kevina Ferandez&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Kylila Basezzi&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Latrena Walklate&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Leighton Firbanks&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Leticia Hovenden&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Linette Boman&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Lolly Prewer&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Lucretia D&apos;Agostini&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Maddalena Angood&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Mandie Feares&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Margette Gibard&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Maurizio Comi&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Mavra Finan&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Melloney Temby&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Morganica Bentke&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Myrtie Ostrich&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Nichole Leisman&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Nilson Wiggam&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Norah Mapis&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Oswald MacCarlich&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Ottilie Wanless&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Parnell Lamprey&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Perry Whitehurst&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Porty Hansed&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Randall Mason&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Reinhard Oscroft&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Ricki Dobrowski&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Roch Symson&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Roldan Raybould&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Rourke Gillbard&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Rozamond Turtle&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Sawyer Sponton&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Shanon Rolfe&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Sheilakathryn Huff&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Sibby Skinner&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Skipp Swales&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Stearne Trolley&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Tannie Gambrell&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Teodor Mullinder&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Thorn Stigers&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Tomaso Horsley&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Vittorio Boxen&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Wheeler Winward&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Wolf Craft&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Yancy Clementet&quot;</bucket>
            </map>
            <map to='#027b8e'>
              <bucket>&quot;Zollie Crinidge&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Abigale Sives&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Agna Cowpe&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Alfi Sabbins&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Alvira Coulman&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Andromache Bonafacino&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Anson Dearnaly&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Arel Abramovitz&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Augie Swallwell&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Austine Speedy&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Bartram Caltun&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Becky Lassen&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Bengt Bilson&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Beverlee Ungerechts&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Brigg Himsworth&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Brod Attrey&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Burt Vasechkin&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Carry Costi&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Celeste Fretson&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Chicky Sinclar&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Cissiee Pollington&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Claudine Barstowk&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Colene Fishleigh&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Corinna Beretta&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Damian Renard&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Daryl Pauncefort&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Debbi Dannatt&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Demetria Bausor&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Dickie Cubbini&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Don Spratling&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Dwain Hatch&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Egon Ortells&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Elsworth Abbitt&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Erasmus Olenchenko&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Esther McOnie&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Ewell Paulusch&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Federico Leuty&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Flore Cashen&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Frederich Glantz&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Genni Fanstone&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Giana Staresmeare&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Giulia Hazart&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Gregg Aimeric&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Guilbert Bearns&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Harland Messenger&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Hedwig Jayme&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Hilario McCulloch&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Ian Rabat&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Isa Fominov&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Jaimie Lancastle&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Jammie Seldner&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Jesse Crosio&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Johna Bunker&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Julita Prene&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Kata Harrop&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Katy Crooke&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Kellyann Adshad&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Kinna Kollasch&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Kit Easdon&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Kylynn Drowsfield&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Laurel Devennie&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Leona Shorrock&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Lizette McKeaveney&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Luci Dyter&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Lyndell Jereatt&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Mair Erett&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Manya Abramovici&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Marinna Kauschke&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Matias Melloi&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Meade McReedy&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Meriel Tapp&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Mitchell MacCague&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Muffin Bhar&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Nancie Vian&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Nicol Swinford&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Nobe McAughtry&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Otes Elegood&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Padriac Collacombe&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Penrod Tomasicchio&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Phyllis Wibberley&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Quillan Guinane&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Reginald Jermy&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Renie Fiveash&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Rikki Chaffey&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Roddy Rubinshtein&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Romonda Hallt&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Sada Branton&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Seymour Fellibrand&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Sharron Claibourn&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Sherilyn Canero&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Sile Zappel&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Solomon Bruck&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Sonia Dunstall&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Sula Thomann&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Tabbie Curner&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Taylor Steuhlmeyer&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Tessa Heakey&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Truman Arlett&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Vincent Jopke&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Wallace Newart&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Worthington Cohane&quot;</bucket>
            </map>
            <map to='#31a1b3'>
              <bucket>&quot;Zabrina Margram&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bessie Roscow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Franklin Wohler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lizbeth Garvan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aldin Newsome&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dorian Emery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karol Salthouse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philbert Raraty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Whit Emloch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony Morison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Engracia Dobbs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kippy Barabisch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roseanne Caruth&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Abbie Oldman&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Agace Hedge&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Alano Satchel&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Alexina Mabley&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Alta Pithcock&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Andy Deeming&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Ansell Tolhurst&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Ardis Taree&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Arty Fontelles&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Aurie Rhead&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Barthel Docket&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Benedikta Naptin&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Beverlee Querree&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Bogey Attew&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Brigitte Whellams&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Cami Eitter&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Carroll Schlagman&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Cecily Faircley&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Cherye Stanfield&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Cissiee Baylis&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Claudette Renackowna&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Colas Gabbitas&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Corene Hallgate&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Dahlia Shovlar&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Darwin Bumpas&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Deana Canton&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Delly Sunman&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Diane Furman&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Dorie Dunleavy&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Dulce Bradwell&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Edin Patinkin&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Elmira Vasilyev&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Errick Burgin&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Estevan Eastment&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Evonne Bembridge&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Ferdy Hornung&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Flin Yoskowitz&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Gale Disbrow&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Gaultiero Fibbens&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Gerta Porrett&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Giselbert Pickring&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Gordon Rewan&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Guenna Filisov&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Hanson Eastes&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Hasheem Groucock&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Hersh Stubbert&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Iain Haversham&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Inglebert Aspinal&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Jacqui Devey&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Jeanne Darte&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Jesse Alflat&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Jodi Lermit&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Julietta Setchfield&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Karney Burstow&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Keely Bointon&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Kellina Haygreen&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Killie Densie&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Kissie Line&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Lauralee Fudge&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Lela Billing&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Levy Abramamov&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Lissa Gawn&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Lotty Loach&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Lura Fawdrie&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Madison Lars&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Manny Mandy&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Marilin Frome&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Marysa Rouchy&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Meade Bampton&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Meridith Urwin&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Miran Runchman&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Morton Petkens&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Nalani Hallad&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Nicol Bertot&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Odessa Mc Andrew&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Osbourn Gherardini&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Padraig Snel&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Patricia Everix&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Porter Buckenhill&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Quentin Gerleit&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Reggie Kernar&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Renell Earley&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Riki Wandtke&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Rockwell Matson&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Roman Eastwood&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Rutledge Hallt&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Selle Casper&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Sharline Abyss&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Shepherd Dutchburn&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Sigismund Sedger&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Sinclair Wark&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Sofie Worsfold&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Stephi Highton&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Tabbatha Averill&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Tanya Kiefer&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Tessa Friese&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Tracy Andrejevic&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Viki Coutts&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Vyky Pegg&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Wilburt Padden&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;Wrennie Dwelly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guss Karim&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melosa McOwan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Teddie Burchill&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>%null%</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Afton Andrassy&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Alanna Lerway&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Aleece Feige&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Aloysius Killingsworth&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Andrew Froment&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Annabelle Hanwell&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Ardelis Forrester&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Artemis Swanson&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Aundrea Outridge&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Barth Weare&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Benedikt Adamou&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Bessy Saladin&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Bobby Summersby&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Bunny Leebetter&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Cami Barnbrook&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Carr Hopkynson&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Ceciley Harg&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Charmain Styles&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Cirillo Frossell&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Claudetta Ricciardiello&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Cobbie Bruyett&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Cordie Brankley&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Cristie Bence&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Darryl Hovee&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Delinda Ech&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Dexter Shutle&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Dolorita Strutton&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Dorotea Fenwick&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Dukie Swire&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Eddy Sturch&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Elvira Kurten&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Emilie Brody&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Essie Withur&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Evered Gludor&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Farris Skettles&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Frans Idale&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Gabrila Toopin&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Gaston Dallaghan&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Gerri Schimann&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Giralda MacPeake&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Glory Chilcott&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Gothart Artus&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Griswold Kelsall&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Hanny Treven&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Harwell Kleinstein&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Herbert Henryson&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Hyman Petrolli&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Jacobo Mucklow&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Jared Fendlow&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Jerrine Cosbey&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Jobina Gobourn&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Juliann Siemantel&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Karly Willavize&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Katie Warhurst&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Kellen Pawelski&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Killian Nettles&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Kissiah Foat&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Launce Gale&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Lek Pimblett&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Levin Coxen&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Lisette Davers&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Lorrie Antonelli&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Ludvig Andren&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Madella Marquiss&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Mandie MacAdie&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Marie-jeanne Breawood&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Marylou Kirkup&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Maximilien Bourget&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Menard Venmore&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Milty Brauninger&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Morly Genery&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Nico Chadwick&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Noak Sleany&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Normy Goodinge&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Orly Nesbitt&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Packston Wackett&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Patrice Pariss&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Philbert Bangs&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Queenie Learie&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Rebeca Aggas&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Renate Whyte&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Ricki Padefield&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Rollo Louedey&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Rosene Beckey&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Ross Vidgen&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Rupert Marrow&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Sean O&apos;Loughlin&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Sharai Priddie&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Shellysheldon Bichard&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Sid Carlone&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Sloan Pudney&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Stephen Tittershill&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Symon Mawne&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Tanya Hamberston&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Tillie Bisseker&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Torry de la Valette Parisot&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Verne Loalday&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Vladimir Westmerland&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Wilbert O&apos;Loughnan&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;Yorgos Dewhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boothe Hayselden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frederigo Cribbott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maribeth Stivani&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Archibald Blessed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Esther Rooson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kizzee Kemston&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Adria Van den Velde&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Agnola Batterson&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Alfonso Massel&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Allsun Biner&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Amil Ennor&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Ange Chitham&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Antonietta Egle&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Audry Fann&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Bailey Bereford&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Beatrix McGivena&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Bernardine Delmonti&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Biddie Gorce&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Briana Trill&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Bryan Jachtym&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Cal Van den Velde&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Carl Troyes&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Cathleen Le Teve&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Chaim Kingdon&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Chico Dye&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Clari Voas&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Cletis Longley&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Consalve Ballay&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Dallas Lavalde&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Darlleen Shalcras&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;David Napoleon&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Deborah Petrovsky&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Dennis Varnham&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Dimitri Tribbeck&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Donn Chaney&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Dory Malpass&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Dyann Olechnowicz&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Eleonora Wiszniewski&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Erminie Rabidge&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Ethelred Sissel&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Fara Sarath&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Feodor Vickers&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Francisca Pottage&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Fredia Favelle&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Gardiner Gypps&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;George Jose&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Gilli Christophers&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Glenda Eliet&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Gregorius Leal&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Harman A&apos;field&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Heall Andrioli&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Honey Gosdin&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Irving Babcock&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Israel Brough&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Jedediah Kedie&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Jenelle Mc-Kerley&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Jim Haddrell&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Josepha Clamp&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Kaine Smallcombe&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Keelby Sudlow&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Keriann Newham&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Kippar Whyatt&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Konstanze Hovie&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Lanny Currall&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Lea Ilyinski&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Lesley Garey&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Lezlie Clemits&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Lillis Eshmade&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Loise Iltchev&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Lucius Hatchell&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Lyon Brittan&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Malvin Ryhorovich&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Marcelia Monkleigh&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Marissa O&apos;Scandall&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Melinda Hadlee&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Michele Pammenter&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Monty Thomazin&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;My Chaston&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Neile Argent&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Nil Shirer&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Nolly Ivanchikov&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Olia O&apos; Mullan&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Otha Langworthy&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Pansie Beccero&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Piper Issacov&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Raleigh Pont&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Reinald Bembrigg&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Rhodie Gaskall&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Roberta Goodale&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Rodolphe Glenton&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Roth Crum&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Rozamond Riha&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Sammy Borsi&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Shane Killen&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Shay Briand&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Sherrie Godleman&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Sonni Milligan&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Suzy Bussens&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Tamas Swatman&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Teddy Lagadu&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Theresa Cowper&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Trudie Phinnessy&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Tyne Anshell&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Wendye Kleinplatz&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Winn Wells&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Wyndham Woolford&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Yuma Dennick&quot;</bucket>
            </map>
            <map to='#94d0c0'>
              <bucket>&quot;Zebulen Emtage&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Adriana Saundercock&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Ahmed Pickthorne&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Alex Patshull&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Allyson Petchell&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Andee Huke&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Angele Cadore&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Antonin Britt&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Arman Yakubov&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Bambi Cogger&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Becka Hacon&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Bertine Smalles&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Bink Bentje&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Briano Janowski&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Brynn Goodyear&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Cammy Stoneham&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Carola Philler&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Cazzie Stanwix&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Chickie Brister&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Christie Anders&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Clarine Piecha&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Clevey Aisthorpe&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Conway Juarez&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Craggy Happel&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Davidde Cockroft&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Deirdre Burgoine&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Denny Spleving&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Dmitri Viant&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Dodi Kiggel&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Donn MacGregor&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Dru Crellim&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Dylan Stranio&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Elianora Poolton&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Emelen Bidnall&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Eugenie Brinson&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Farlie Brookz&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Fitzgerald Hellikes&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Franciska Stigell&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Free Rowland&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Garik Whitwell&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Georgetta Lovett&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Gina Mallon&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Glendon Malham&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Gretel Paschke&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Halette Borsi&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Harman Lynds&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Huberto Mollatt&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Inglis Pickaver&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Ivy Farr&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Jammal Devenny&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Jenny Massy&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Jo Roberts&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Judi Cazereau&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Kamila Parsonage&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Katharine Redbourn&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Kermit Lebond&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Kipper Circuit&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Kori Sparsholt&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Lark Gonet&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Leese Huckleby&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Leticia Danovich&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Lincoln Boler&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Loleta Aberdalgy&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Lucky Klainman&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Mabelle Wellbelove&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Mandi Adamsson&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Marcellina Baynton&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Markus Pendrey&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Maury Galego&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Melba Spellacy&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Mikol Eck&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Morganica Ainsbury&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Mycah Beaston&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Nev Prosh&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Nils Champion&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Nora Anselm&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Olive Mozzi&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Otis Ottey&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Paquito Atwood&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Peria Rantoull&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Rand Winchcum&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Reinaldos Simmig&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Rhona De Freyne&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Roberto Harme&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Rodrique Vernon&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Rosemonde Cartwight&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Rozamond Sommer&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Sandor Stirland&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Shannen Lewin&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Sheena Kybbye&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Sherwin Minocchi&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Sindee Jasik&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Suzy Trounson&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Tanner Terlinden&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Tedra Goodbanne&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Tina Dunstan&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Toma Woolforde&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Vittoria Whitney&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Wheeler Godsil&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Winnifred Beswetherick&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Xenia Maleck&quot;</bucket>
            </map>
            <map to='#959c9e'>
              <bucket>&quot;Zechariah McReidy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Davide Senten&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamison Cashin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ossie Midden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valerie Pickover&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Adriena Giffin&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Ajay Worham&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Alexander Broadbent&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Aloysius Glowacz&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Andree Breeds&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Annabell Downer&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Arleen Casbolt&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Art Shardlow&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Augustus Bourley&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Barth Sapshed&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Benedict Rosas&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Blondell Dibdall&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Brien Heaton&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Bryon Goundry&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Callean Wass&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Caron Kezar&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Cecil Gant&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Charlie Dmych&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Cicily Hast&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Claudell Rounsefell&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Clotilda Southers&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Cordi Thornton&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Cristen Wiltshire&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Davie Blay&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Delcina Hursey&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Devonne Alderwick&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Dolley Starmont&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Dorian Rustman&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Duff Karlowicz&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Dyane Burwell&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Ebony Conrad&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Ellsworth Andrieux&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Emeline Vezey&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Esme Pilipets&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Evangelin Boc&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Farra Matyushkin&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Freddi Litherborough&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Gabey Kennicott&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Garwin Nurden&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Gerik Woodroof&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Gipsy Ewestace&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Glennis Flintoff&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Griffith Escot&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Hamel Curzey&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Harvey Dwelley&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Heloise Fairpool&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Hussein Tapenden&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Jacklin Duchant&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Janaye Eade&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Jermaine Bagshawe&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Jobie Runacres&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Juliana Mitchenson&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Karlik Penchen&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Katheryn Kinner&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Kelcie Kingaby&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Kiley Grunder&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Krystyna Airey&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Latrena Yetts&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Leisha McConway&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Letizia Poore&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Link Gorini&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Loria Tappington&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Ludovico Juster&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Maddalena Hencke&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Mandie Jeffryes&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Maris Leete&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Martino Scoles&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Maximilian Geffen&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Mikel McNess&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Morgen Newport&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Nady Withinshaw&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Nichols Devinn&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Nixie Shoesmith&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Norina Blakeway&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Opal Cleare&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Pace Clemonts&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Paten Cayet&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Petr Westman&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Poul Gaskin&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Raye Roo&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Reinold Natt&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Robert Corkill&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Rochette Haddacks&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Rolland Esmead&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Rosmunda Duxbarry&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Sada Dowyer&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Seamus Cains&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Shara Bramhill&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Shelli Bartholomaus&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Sibylla Kibble&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Skippie Yearsley&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Sybilla MacCart&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Tannie Petrakov&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Terrel Keynd&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Thorvald Duckerin&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Tomkin Bernlin&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Verla Dumingos&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Vivienne Crayden&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Worthington Ahmed&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Yardley Matten&quot;</bucket>
            </map>
            <map to='#9f8f12'>
              <bucket>&quot;Zondra Ringham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karrah Howell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilfrid Gertray&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Adolpho Bellerby&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Agneta McAmish&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Aldridge Poskitt&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Alleen Eaken&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Amby Bodega&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Anet Roseman&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Ariel McCloid&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Ashlen Willbond&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Babara Sissel&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Bastien Ibbeson&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Berenice Kaesmakers&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Bevvy Openshaw&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Brendis Pineaux&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Brooke Arling&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Caitrin Critten&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Caritta Compston&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Catha Davitt&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Celia Bryden&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Claresta MacConnulty&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Clemmie Bartoszewicz&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Conroy Rappaport&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Corrine Baribal&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Daisi Tinwell&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Daisy Spowart&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Datha Fishburn&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Debby Balmadier&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Dena Pabst&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Dillon Bannister&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Donica Humby&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Dorothy Barnardo&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Elbertina Fendley&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Elvira Darthe&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Ermentrude Heindle&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Etan Prinett&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Fancie Woofendell&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Feodor Englishby&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Fonsie Levane&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Frederik Milan&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Gardie Crellim&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Giffie Offill&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Gilbert O&apos;Fallone&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Gleda Howerd&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Hagen MacCarter&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Harlin Mazin&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Hayes Daveren&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Hunfredo Hayball&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Irvine Headon&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Isak Bergstram&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Jamie Jiruca&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Jenelle Fearnill&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Jillane Simion&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Jordan Clampe&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Kaela Romaines&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Kearney Cuddehy&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Kenneth Elleyne&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Kirsteni Gritskov&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Kort Disley&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Kyle Michie&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Lanie Cobbold&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Lavena Seekings&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Leonora Swetenham&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Liane Poizer&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Logan Colomb&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Lucine Stutt&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Lynnett Tipper&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Malorie Votier&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Marcelia Copins&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Maurizia Ritmeyer&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Melany Ladewig&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Micheil Fleote&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Moll Ogilby&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Murial Bulloch&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Natividad Balducci&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Nicole Ruckhard&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Noel Sturch&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Ogdan Blenkinship&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Pancho Edis&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Paxon Roomes&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Pietra Buckleigh&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Rafi Brettelle&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Reiko Degenhardt&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Reynold Elman&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Rockie MacKibbon&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Rodolph Denniss&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Rosalinde Cubuzzi&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Rowen Sollas&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Salomon Perkins&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Shane Diss&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Shawna Hinrichsen&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Simmonds Bapty&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Sonny McCart&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Sunny Christescu&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Sylas Duffill&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Tamar Windmill&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Terrence Dalligan&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Thaxter Kingsbury&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Tobiah Heinsius&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Virginia De Antoni&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Welby Lourenco&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Wilone Champley&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Wyn Saynor&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Zachariah Meininking&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Danny Bodle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglebert Butland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nowell Preddy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tristam Larose&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arty Strudwick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fayre Brannigan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rubia Evetts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cheston Hritzko&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haskell Moxted&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mick Macewan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thaddus Joder&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Abner Fraschetti&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Agnella Capener&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Aldric Birney&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Alick Baise&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Amara Clow&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Anthony Lindstrom&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Aridatha Sephton&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Ashby Bispham&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Averil Ackery&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Bartram Di Lucia&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Benoit Harniman&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Beverly Domnick&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Brena Schnitter&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Brook Eade&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Byrom Ramas&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Carita Sand&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Casandra Betteridge&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Celestina Lethardy&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Chanda Mensler&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Clarabelle Broschek&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Claudine Dymick&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Collete Dory&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Corinna Suggey&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Daisy Pollen&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Daryle Marginson&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Debbie Tillman&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Demott Mullaly&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Diego Van den Broek&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Donaugh Benedict&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Dwayne Doel&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Egor Mariette&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Elvin Trayhorn&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Erhard O&apos;Moylane&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Eustacia Dornan&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Fabio Commuzzo&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Felice Dechelette&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Flossy Concannon&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Gallagher Bromell&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Gannie Bargh&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Geoff Gwillym&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Giulietta Garbott&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Grannie Cracker&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Gunner Petti&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Harlene Nono&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Hatti Carletti&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Hildegarde Bamb&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Ilise Clissold&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Isadora Ducker&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Jamal Dudgeon&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Jethro Mertel&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Joline Skipperbottom&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Justinn Haruard&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Karoly Burgoine&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Katleen Arnoult&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Kaylyn Jakaway&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Kelsey Hatt&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Kipp Stockport&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Kizzee Agget&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Lacy Drance&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Laurie Odlin&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Leonid Dorricott&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Liane Abelevitz&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Lucilia Minshall&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Lynnell Shoesmith&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Maisie Maddox&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Marc Keunemann&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Mariquilla Springthorpe&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Maurine Clee&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Mel Rochford&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Michal Bryan&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Moina Rosenbaum&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Muffin Grigolon&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Nanni Girodias&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Nicolas O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Nobe Trowsdale&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Odilia Quick&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Palmer Heaven&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Pauline Dallosso&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Pierrette Gummie&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Raff Waycott&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Regine Bownes&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Renie Laundon&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Robenia Monks&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Rodney Trethewey&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Rosabelle Godsmark&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Rowan Summerly&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Shadow Yakutin&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Shaw MacEvilly&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Shepperd Ricards&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Sim Constantinou&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Son Varney&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Stephani Sidsaff&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Sumner Carrivick&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Taber Szymon&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Ted Izacenko&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Timi Duny&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Tiphanie Blackader&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Vinny Incogna&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Weidar Etheridge&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Willard Booton&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;Zach Hedman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Craggie Dering&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hilliard Dullard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nadiya Balasini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Therese Brotherhood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Irvin Bevans&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Omero McDonand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tyne Coate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paulina Iannuzzelli&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vitia Axtens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burk Wortley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Geoff Sitford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Martelle Tuppeny&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ferdinand Billie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shepperd Leonards&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rickert Brasted&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wylie Huntingdon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Noami Cokly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tobias Woodhams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calhoun Mussington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andriana Gosnoll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ellwood Budden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kippar Brimilcome&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wyn Meach&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:evaluation:ok]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>5</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>3</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>4</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>6</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ageGroup:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#31a1b3'>
              <bucket>&quot;40-49&quot;</bucket>
            </map>
            <map to='#6fb899'>
              <bucket>&quot;30-39&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;18-29&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;60+&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;50-59&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:wealthSegment:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Mass Customer&quot;</bucket>
            </map>
            <map to='#6798c1'>
              <bucket>&quot;High Net Worth&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Affluent Customer&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.11glxe31aszf7o16nf5380ijvl0t'>
      <datasources>
        <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
      </datasources>
      <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
        <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
        <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]'>
        <groupfilter function='level-members' level='[none:ageGroup:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' />
      </filter>
      <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]'>
        <groupfilter function='level-members' level='[none:gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Highest value customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='string' name='[ageGroup (DataNew.csv)]' role='dimension' type='nominal' />
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column-instance column='[evaluation]' derivation='Attribute' name='[attr:evaluation:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Evaluation' datatype='integer' name='[evaluation]' role='dimension' type='ordinal' />
            <column aggregation='CountD' caption='Full Name' datatype='string' name='[fullName]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[jobIndustry (DataNew.csv) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[jobIndustry (DataNew.csv)]' new-bin='true'>
                <bin default-name='true' value='&quot;Financial Services, Health, Manufacturing&quot;'>
                  <value>&quot;Financial Services&quot;</value>
                  <value>&quot;Health&quot;</value>
                  <value>&quot;Manufacturing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[jobIndustry (DataNew.csv)]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup (DataNew.csv)]' derivation='None' name='[none:ageGroup (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[fullName]' derivation='None' name='[none:fullName:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[jobIndustry (DataNew.csv)]' derivation='None' name='[none:jobIndustry (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[propertyValuation (DataNew.csv)]' derivation='None' name='[none:propertyValuation (DataNew.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[state (DataNew.csv)]' derivation='None' name='[none:state (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[tenure (DataNew.csv)]' derivation='None' name='[none:tenure (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment (DataNew.csv)]' derivation='None' name='[none:wealthSegment (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[propertyValuation (DataNew.csv) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[propertyValuation (DataNew.csv)]' new-bin='true'>
                <bin default-name='true' value='&quot;8, 9, 10 and 1 more&quot;'>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' datatype='integer' name='[propertyValuation (DataNew.csv)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[state (DataNew.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[tenure (DataNew.csv) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[tenure (DataNew.csv)]' new-bin='true'>
                <bin default-name='true' value='&quot;04-07, 08-11, 12-15 and 1 more&quot;'>
                  <value>&quot;04-07&quot;</value>
                  <value>&quot;08-11&quot;</value>
                  <value>&quot;12-15&quot;</value>
                  <value>&quot;16-19&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[tenure (DataNew.csv)]' role='dimension' type='nominal' />
            <column datatype='string' name='[wealthSegment (DataNew.csv)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup (DataNew.csv):nk]'>
            <groupfilter function='member' level='[none:ageGroup (DataNew.csv):nk]' member='&quot;40-49&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry (DataNew.csv):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:jobIndustry (DataNew.csv):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:jobIndustry (DataNew.csv):nk]' member='%null%' />
                <groupfilter function='member' level='[none:jobIndustry (DataNew.csv):nk]' member='&quot;Argiculture&quot;' />
                <groupfilter function='member' level='[none:jobIndustry (DataNew.csv):nk]' member='&quot;Entertainment&quot;' />
                <groupfilter function='member' level='[none:jobIndustry (DataNew.csv):nk]' member='&quot;IT&quot;' />
                <groupfilter function='member' level='[none:jobIndustry (DataNew.csv):nk]' member='&quot;Property&quot;' />
                <groupfilter function='member' level='[none:jobIndustry (DataNew.csv):nk]' member='&quot;Retail&quot;' />
                <groupfilter function='member' level='[none:jobIndustry (DataNew.csv):nk]' member='&quot;Telecommunications&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:propertyValuation (DataNew.csv):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:propertyValuation (DataNew.csv):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:propertyValuation (DataNew.csv):ok]' member='1' />
                <groupfilter function='member' level='[none:propertyValuation (DataNew.csv):ok]' member='2' />
                <groupfilter function='member' level='[none:propertyValuation (DataNew.csv):ok]' member='3' />
                <groupfilter function='member' level='[none:propertyValuation (DataNew.csv):ok]' member='4' />
                <groupfilter function='member' level='[none:propertyValuation (DataNew.csv):ok]' member='5' />
                <groupfilter function='member' level='[none:propertyValuation (DataNew.csv):ok]' member='6' />
                <groupfilter function='member' level='[none:propertyValuation (DataNew.csv):ok]' member='7' />
                <groupfilter function='member' level='[none:propertyValuation (DataNew.csv):ok]' member='12' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk]'>
            <groupfilter function='member' level='[none:state (DataNew.csv):nk]' member='&quot;NSW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:tenure (DataNew.csv):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tenure (DataNew.csv):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tenure (DataNew.csv):nk]' member='&quot;00-03&quot;' />
                <groupfilter function='member' level='[none:tenure (DataNew.csv):nk]' member='&quot;20-22&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk]'>
            <groupfilter function='member' level='[none:wealthSegment (DataNew.csv):nk]' member='&quot;Mass Customer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry (DataNew.csv):nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:tenure (DataNew.csv):nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:propertyValuation (DataNew.csv):ok]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup (DataNew.csv):nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:fullName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[attr:evaluation:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[jobIndustry (DataNew.csv) (group)] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup (DataNew.csv):nk] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[propertyValuation (DataNew.csv) (group)] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[tenure (DataNew.csv) (group)] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:fullName:nk]))))))</cols>
      </table>
      <simple-id uuid='{39FCB445-2D37-4A58-A5A1-DFCD47800E45}' />
    </worksheet>
    <worksheet name='Mass Customer'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column caption='Job Industry' datatype='string' name='[jobIndustry]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[jobIndustry]' derivation='None' name='[none:jobIndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment]' derivation='None' name='[none:wealthSegment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Wealth Segment' datatype='string' name='[wealthSegment]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:jobIndustry:nk]' />
              <groupfilter function='member' level='[none:jobIndustry:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]'>
            <groupfilter function='member' level='[none:wealthSegment:nk]' member='&quot;Mass Customer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[:Measure Names]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:Number of Records:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk])</cols>
      </table>
      <simple-id uuid='{55377530-0431-4E65-940E-0A7A82721CE2}' />
    </worksheet>
    <worksheet name='New South Wales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column caption='Job Industry' datatype='string' name='[jobIndustry]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[jobIndustry]' derivation='None' name='[none:jobIndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;QLD&quot;' value='&quot;Queensland&quot;' />
                <semantic-value key='&quot;VIC&quot;' value='&quot;Victoria&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;NSW&quot;' value='-31.2532' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;NSW&quot;' value='146.9211' />
              </semantic-values>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:jobIndustry:nk]' />
              <groupfilter function='member' level='[none:jobIndustry:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;NSW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:Number of Records:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk])</cols>
      </table>
      <simple-id uuid='{E85E14EA-43F8-4408-9B0B-B02FA88F56BD}' />
    </worksheet>
    <worksheet name='Number of candidate customers in NSW'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Evaluation' datatype='integer' name='[evaluation]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[evaluation]' derivation='None' name='[none:evaluation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[state (DataNew.csv)]' derivation='None' name='[none:state (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment (DataNew.csv)]' derivation='None' name='[none:wealthSegment (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state (DataNew.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[wealthSegment (DataNew.csv)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:evaluation:ok]' />
              <groupfilter function='union'>
                <groupfilter from='1' function='range' level='[none:evaluation:ok]' to='3' />
                <groupfilter function='member' level='[none:evaluation:ok]' member='6' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state (DataNew.csv):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state (DataNew.csv):nk]' member='&quot;QLD&quot;' />
                <groupfilter function='member' level='[none:state (DataNew.csv):nk]' member='&quot;VIC&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:Number of Records:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk])</cols>
      </table>
      <simple-id uuid='{8BB6B241-7FFF-43E9-8A56-6418FFC8FEFA}' />
    </worksheet>
    <worksheet name='Number of candidate mass customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Evaluation' datatype='integer' name='[evaluation]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[evaluation]' derivation='None' name='[none:evaluation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[state (DataNew.csv)]' derivation='None' name='[none:state (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment (DataNew.csv)]' derivation='None' name='[none:wealthSegment (DataNew.csv):nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state (DataNew.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[wealthSegment (DataNew.csv)]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:evaluation:ok]' />
              <groupfilter function='union'>
                <groupfilter from='0' function='range' level='[none:evaluation:ok]' to='3' />
                <groupfilter function='member' level='[none:evaluation:ok]' member='6' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk]'>
            <groupfilter function='member' level='[none:wealthSegment (DataNew.csv):nk]' member='&quot;Mass Customer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:Number of Records:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk])</cols>
      </table>
      <simple-id uuid='{EBEC7DFD-D8D3-43AB-B49E-7E82020EDFA2}' />
    </worksheet>
    <worksheet name='Profit by car owners'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='string' name='[Job Industry (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[jobIndustry]' new-bin='true'>
                <bin default-name='true' value='&quot;Financial Services, Health, Manufacturing&quot;'>
                  <value>&quot;Financial Services&quot;</value>
                  <value>&quot;Health&quot;</value>
                  <value>&quot;Manufacturing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column caption='Job Industry' datatype='string' name='[jobIndustry]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[jobIndustry]' derivation='None' name='[none:jobIndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[ownsCar]' derivation='None' name='[none:ownsCar:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment]' derivation='None' name='[none:wealthSegment:nk]' pivot='key' type='nominal' />
            <column caption='Owns Car' datatype='string' name='[ownsCar]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;QLD&quot;' value='&quot;Queensland&quot;' />
                <semantic-value key='&quot;VIC&quot;' value='&quot;Victoria&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;NSW&quot;' value='-31.2532' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;NSW&quot;' value='146.9211' />
              </semantic-values>
            </column>
            <column-instance column='[totalSpent]' derivation='Sum' name='[sum:totalSpent:qk]' pivot='key' type='quantitative' />
            <column caption='Total Spent' datatype='real' name='[totalSpent]' role='measure' type='quantitative' />
            <column caption='Wealth Segment' datatype='string' name='[wealthSegment]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:jobIndustry:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='%null%' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Argiculture&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Entertainment&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;IT&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Property&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Retail&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Telecommunications&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;NSW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]'>
            <groupfilter function='member' level='[none:wealthSegment:nk]' member='&quot;Mass Customer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]' value='false' />
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[Job Industry (group)] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:ownsCar:nk])))</cols>
      </table>
      <simple-id uuid='{F02CAC3B-20D0-4392-B0C0-C5F938C22600}' />
    </worksheet>
    <worksheet name='Profit by past purchases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='string' name='[Job Industry (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[jobIndustry]' new-bin='true'>
                <bin default-name='true' value='&quot;Financial Services, Health, Manufacturing&quot;'>
                  <value>&quot;Financial Services&quot;</value>
                  <value>&quot;Health&quot;</value>
                  <value>&quot;Manufacturing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column caption='Job Industry' datatype='string' name='[jobIndustry]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[jobIndustry]' derivation='None' name='[none:jobIndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[pastPurchases]' derivation='None' name='[none:pastPurchases:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment]' derivation='None' name='[none:wealthSegment:nk]' pivot='key' type='nominal' />
            <column caption='Past Purchases' datatype='string' name='[pastPurchases]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;QLD&quot;' value='&quot;Queensland&quot;' />
                <semantic-value key='&quot;VIC&quot;' value='&quot;Victoria&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;NSW&quot;' value='-31.2532' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;NSW&quot;' value='146.9211' />
              </semantic-values>
            </column>
            <column-instance column='[totalSpent]' derivation='Sum' name='[sum:totalSpent:qk]' pivot='key' type='quantitative' />
            <column caption='Total Spent' datatype='real' name='[totalSpent]' role='measure' type='quantitative' />
            <column caption='Wealth Segment' datatype='string' name='[wealthSegment]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:jobIndustry:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='%null%' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Argiculture&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Entertainment&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;IT&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Property&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Retail&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Telecommunications&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;NSW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]'>
            <groupfilter function='member' level='[none:wealthSegment:nk]' member='&quot;Mass Customer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]' value='false' />
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[Job Industry (group)] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:pastPurchases:nk])))</cols>
      </table>
      <simple-id uuid='{7866FF72-2624-4C85-B02A-D2294A5F8596}' />
    </worksheet>
    <worksheet name='Profit by property valuation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='string' name='[Job Industry (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[jobIndustry]' new-bin='true'>
                <bin default-name='true' value='&quot;Financial Services, Health, Manufacturing&quot;'>
                  <value>&quot;Financial Services&quot;</value>
                  <value>&quot;Health&quot;</value>
                  <value>&quot;Manufacturing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column caption='Job Industry' datatype='string' name='[jobIndustry]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[jobIndustry]' derivation='None' name='[none:jobIndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[propertyValuation]' derivation='None' name='[none:propertyValuation:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment]' derivation='None' name='[none:wealthSegment:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Property Valuation' datatype='integer' name='[propertyValuation]' role='dimension' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;QLD&quot;' value='&quot;Queensland&quot;' />
                <semantic-value key='&quot;VIC&quot;' value='&quot;Victoria&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;NSW&quot;' value='-31.2532' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;NSW&quot;' value='146.9211' />
              </semantic-values>
            </column>
            <column-instance column='[totalSpent]' derivation='Sum' name='[sum:totalSpent:qk]' pivot='key' type='quantitative' />
            <column caption='Total Spent' datatype='real' name='[totalSpent]' role='measure' type='quantitative' />
            <column caption='Wealth Segment' datatype='string' name='[wealthSegment]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:jobIndustry:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='%null%' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Argiculture&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Entertainment&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;IT&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Property&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Retail&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Telecommunications&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;NSW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]'>
            <groupfilter function='member' level='[none:wealthSegment:nk]' member='&quot;Mass Customer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]' value='false' />
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[Job Industry (group)] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:propertyValuation:ok])))</cols>
      </table>
      <simple-id uuid='{8EAE3DC5-ED70-4D04-AF14-5F95F6799358}' />
    </worksheet>
    <worksheet name='Profit by state'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;QLD&quot;' value='&quot;Queensland&quot;' />
                <semantic-value key='&quot;VIC&quot;' value='&quot;Victoria&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;NSW&quot;' value='-31.2532' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;NSW&quot;' value='146.9211' />
              </semantic-values>
            </column>
            <column-instance column='[totalSpent]' derivation='Sum' name='[sum:totalSpent:qk]' pivot='key' type='quantitative' />
            <column caption='Total Spent' datatype='real' name='[totalSpent]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]' />
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' />
              <geometry column='[federated.11glxe31aszf7o16nf5380ijvl0t].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[Latitude (generated)]</rows>
        <cols>[federated.11glxe31aszf7o16nf5380ijvl0t].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4BA4909E-40C4-4C84-82BC-00584BAF81BE}' />
    </worksheet>
    <worksheet name='Profit by tenure'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column datatype='string' name='[Job Industry (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[jobIndustry]' new-bin='true'>
                <bin default-name='true' value='&quot;Financial Services, Health, Manufacturing&quot;'>
                  <value>&quot;Financial Services&quot;</value>
                  <value>&quot;Health&quot;</value>
                  <value>&quot;Manufacturing&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column caption='Job Industry' datatype='string' name='[jobIndustry]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[jobIndustry]' derivation='None' name='[none:jobIndustry:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[tenure]' derivation='None' name='[none:tenure:nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment]' derivation='None' name='[none:wealthSegment:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;QLD&quot;' value='&quot;Queensland&quot;' />
                <semantic-value key='&quot;VIC&quot;' value='&quot;Victoria&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;NSW&quot;' value='-31.2532' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;NSW&quot;' value='146.9211' />
              </semantic-values>
            </column>
            <column-instance column='[totalSpent]' derivation='Sum' name='[sum:totalSpent:qk]' pivot='key' type='quantitative' />
            <column caption='Tenure' datatype='string' name='[tenure]' role='dimension' type='nominal' />
            <column caption='Total Spent' datatype='real' name='[totalSpent]' role='measure' type='quantitative' />
            <column caption='Wealth Segment' datatype='string' name='[wealthSegment]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[Job Industry (group)]'>
            <groupfilter function='member' level='[Job Industry (group)]' member='&quot;Financial Services, Health, Manufacturing&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:jobIndustry:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='%null%' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Argiculture&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Entertainment&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;IT&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Property&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Retail&quot;' />
                <groupfilter function='member' level='[none:jobIndustry:nk]' member='&quot;Telecommunications&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;NSW&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]'>
            <groupfilter function='member' level='[none:wealthSegment:nk]' member='&quot;Mass Customer&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[Job Industry (group)]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]' value='false' />
            <format attr='display' field='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]</rows>
        <cols>([federated.11glxe31aszf7o16nf5380ijvl0t].[Job Industry (group)] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk] / ([federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk] / [federated.11glxe31aszf7o16nf5380ijvl0t].[none:tenure:nk])))</cols>
      </table>
      <simple-id uuid='{2BF28EDE-E165-4B6F-AC14-1AB00EFE0BC2}' />
    </worksheet>
    <worksheet name='Profit by wealth sector'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
          </datasources>
          <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
            <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[wealthSegment]' derivation='None' name='[none:wealthSegment:nk]' pivot='key' type='nominal' />
            <column-instance column='[totalSpent]' derivation='Sum' name='[sum:totalSpent:qk]' pivot='key' type='quantitative' />
            <column caption='Total Spent' datatype='real' name='[totalSpent]' role='measure' type='quantitative' />
            <column caption='Wealth Segment' datatype='string' name='[wealthSegment]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</column>
            <column>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]' />
              <wedge-size column='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' />
              <size column='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8B94DC81-CBFB-4F38-A357-0E3121B42644}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
      </datasources>
      <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
        <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
        <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type='layout-basic' w='87627' x='586' y='1042'>
              <zone h='48958' id='3' name='Profit by state' w='19326' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='14' name='Mass Customer' w='68301' x='19912' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='17' name='Profit by wealth sector' w='19326' x='586' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='20' name='New South Wales' w='68301' x='19912' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='153' h='97916' id='6' is-fixed='true' param='vert' type='layout-flow' w='11201' x='88213' y='1042'>
              <zone h='5990' id='19' name='Profit by wealth sector' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' type='size' w='11201' x='88213' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8464' id='8' name='Profit by state' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' type='color' w='11201' x='88213' y='7032'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11198' id='18' name='Profit by wealth sector' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]' type='color' w='11201' x='88213' y='15496'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11589' id='33' mode='radiolist' name='New South Wales' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' type='filter' values='database' w='11201' x='88213' y='26694'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9766' id='30' mode='slider' name='New South Wales' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' type='filter' values='database' w='11201' x='88213' y='38283'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16407' id='21' name='New South Wales' pane-specification-id='1' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' type='color' w='11201' x='88213' y='48049'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='35' param='vert' type='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='48958' id='3' is-fixed='true' name='Profit by state' w='19326' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8464' id='8' name='Profit by state' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' type='color' w='11201' x='88213' y='7032'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11589' id='33' mode='dropdown' name='New South Wales' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' type='filter' values='database' w='11201' x='88213' y='26694'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9766' id='30' mode='slider' name='New South Wales' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' type='filter' values='database' w='11201' x='88213' y='38283'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='20' is-fixed='true' name='New South Wales' w='68301' x='19912' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16407' id='21' name='New South Wales' pane-specification-id='1' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' type='color' w='11201' x='88213' y='48049'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='17' is-fixed='true' name='Profit by wealth sector' w='19326' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5990' id='19' name='Profit by wealth sector' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' type='size' w='11201' x='88213' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11198' id='18' name='Profit by wealth sector' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]' type='color' w='11201' x='88213' y='15496'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='14' is-fixed='true' name='Mass Customer' w='68301' x='19912' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{45C99082-D3FE-416B-889A-F4DA33B06D1D}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='DataNow' name='federated.11glxe31aszf7o16nf5380ijvl0t' />
      </datasources>
      <datasource-dependencies datasource='federated.11glxe31aszf7o16nf5380ijvl0t'>
        <column caption='Age Group' datatype='string' name='[ageGroup]' role='dimension' type='nominal' />
        <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
        <column-instance column='[ageGroup]' derivation='None' name='[none:ageGroup:nk]' pivot='key' type='nominal' />
        <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='24' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='12' param='horz' type='layout-flow' w='87115' x='586' y='1042'>
              <zone h='97916' id='7' param='horz' type='layout-flow' w='87115' x='586' y='1042'>
                <zone h='97916' id='5' type='layout-basic' w='87115' x='586' y='1042'>
                  <zone h='48958' id='3' name='Profit by tenure' w='26779' x='586' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48958' id='9' name='Profit by property valuation' w='60336' x='27365' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48958' id='10' name='Profit by past purchases' w='60336' x='27365' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48958' id='14' name='Profit by car owners' w='26779' x='586' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97916' id='23' is-fixed='true' param='vert' type='layout-flow' w='11713' x='87701' y='1042'>
              <zone h='9766' id='25' mode='slider' name='Profit by property valuation' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' type='filter' values='database' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11589' id='26' mode='radiolist' name='Profit by property valuation' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' type='filter' values='database' w='11713' x='87701' y='10808'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='30' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='48958' id='3' is-fixed='true' name='Profit by tenure' w='26779' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9766' id='25' mode='slider' name='Profit by property valuation' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' type='filter' values='database' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11589' id='26' mode='dropdown' name='Profit by property valuation' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' type='filter' values='database' w='11713' x='87701' y='10808'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='9' is-fixed='true' name='Profit by property valuation' w='60336' x='27365' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='14' is-fixed='true' name='Profit by car owners' w='26779' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='10' is-fixed='true' name='Profit by past purchases' w='60336' x='27365' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{48D5B42D-ACE0-49E9-BD7D-6F7B6A257A84}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type='layout-basic' w='87115' x='586' y='1042'>
              <zone h='97916' id='3' name='Highest value customers' w='65227' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='9' name='Number of candidate customers in NSW' w='21888' x='65813' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='11' name='Number of candidate mass customers' w='21888' x='65813' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97916' id='6' is-fixed='true' param='vert' type='layout-flow' w='11713' x='87701' y='1042'>
              <zone h='65886' id='8' name='Highest value customers' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:fullName:nk]' type='color' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8594' id='10' name='Number of candidate customers in NSW' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]' type='color' w='11713' x='87701' y='66928'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='17' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='97916' id='3' is-fixed='true' name='Highest value customers' w='65227' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='65886' id='8' name='Highest value customers' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:fullName:nk]' type='color' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='9' is-fixed='true' name='Number of candidate customers in NSW' w='21888' x='65813' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8594' id='10' name='Number of candidate customers in NSW' pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]' type='color' w='11713' x='87701' y='66928'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='11' is-fixed='true' name='Number of candidate mass customers' w='21888' x='65813' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4E124C85-893E-4B57-8553-BFFE688DD670}' />
    </dashboard>
    <dashboard name='Data Presentation' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='264' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Customer groups which brought the most profit' captured-sheet='Dashboard 1' id='1'>
                    <currentDeltas>
                      <worksheet name='New South Wales'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='horizontal'>
                              <node-reference>
                                <fields>
                                  <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;NSW&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                  <story-point caption='Mass customer groups which brought the most profit in NSW' captured-sheet='Dashboard 2' id='2' />
                  <story-point caption='Most promising new customers based on groups which brought the most profit' captured-sheet='Dashboard 3' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{5A10242F-D897-462F-9BE2-B3229AC532BD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Profit by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBA94A54-C383-49B7-895F-9A3997CCE0BB}' />
    </window>
    <window class='worksheet' name='Profit by wealth sector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[sum:totalSpent:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4ED6E935-D346-44E0-8510-56CE5CE860EB}' />
    </window>
    <window class='worksheet' name='New South Wales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</field>
                  <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;NSW&quot;</bucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03901236-9B47-4DBB-9FB1-C70B24FF8146}' />
    </window>
    <window class='worksheet' name='Mass Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</field>
                  <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Mass Customer&quot;</bucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3BC525D-7C12-4BD0-8926-F5EA85FB2B03}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Mass Customer'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New South Wales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by wealth sector'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{075EEDA7-35F6-4265-BC05-1A4F038D46B9}' />
    </window>
    <window class='worksheet' name='Profit by tenure'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[Job Industry (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Financial Services, Health, Manufacturing&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0BDDF3CF-82FC-4BD3-91DA-6B977ACB31DB}' />
    </window>
    <window class='worksheet' name='Profit by property valuation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:tenure:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC9527D6-4AEC-4179-85DA-52E5AA5B3F48}' />
    </window>
    <window class='worksheet' name='Profit by past purchases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ownsCar:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:propertyValuation:ok]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:tenure:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0394ABE2-ACB4-48DE-92A5-CED02896C0B4}' />
    </window>
    <window class='worksheet' name='Profit by car owners'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:propertyValuation:ok]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:tenure:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25E7CD53-ABE7-461F-A8F0-EE7CA48FD3CE}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Profit by car owners'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by past purchases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by property valuation'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Profit by tenure'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:gender:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{78753F2A-7E5E-476F-8FB2-0FD8E5B51549}' />
    </window>
    <window class='worksheet' name='Highest value customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:fullName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:fullName:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:jobIndustry (DataNew.csv):nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:propertyValuation (DataNew.csv):ok]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:tenure (DataNew.csv):nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C23DE81B-1360-40E2-94C8-B5997454F312}' />
    </window>
    <window class='worksheet' name='Number of candidate customers in NSW'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:fullName:nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0855AB8-ACFC-4C65-8020-E6DFEA826179}' />
    </window>
    <window class='worksheet' name='Number of candidate mass customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:evaluation:ok]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk]</field>
            <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43ED6DA6-8583-4066-AE5C-35D3F06BE0F8}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Highest value customers'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[jobIndustry (DataNew.csv) (group)]</field>
                    <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:ageGroup (DataNew.csv):nk]</field>
                    <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:state (DataNew.csv):nk]</field>
                    <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:wealthSegment (DataNew.csv):nk]</field>
                    <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[propertyValuation (DataNew.csv) (group)]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Financial Services, Health, Manufacturing&quot;</bucket>
                    <bucket>&quot;40-49&quot;</bucket>
                    <bucket>&quot;NSW&quot;</bucket>
                    <bucket>&quot;Mass Customer&quot;</bucket>
                    <bucket>&quot;8, 9, 10 and 1 more&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.11glxe31aszf7o16nf5380ijvl0t].[none:fullName:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Number of candidate customers in NSW'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of candidate mass customers'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D02559D0-787F-43A3-90A8-3F52386318AA}' />
    </window>
    <window class='dashboard' name='Data Presentation'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{F222BF5E-DCAC-4281-B744-683C0A106049}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      IPYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Data Presentation' width='192'>
      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
      bFY/RgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Highest value customers' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Mass Customer' width='192'>
      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
      KE0CIJT2fyRFt0yifMLaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New South Wales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of candidate customers in NSW' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Number of candidate mass customers' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit by car owners' width='190'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by past purchases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by property valuation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by state' width='192'>
      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
      is0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit by tenure' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by wealth sector' width='192'>
      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
      CvA/jRMwwR4eKoMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
